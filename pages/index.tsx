import type { NextPage } from 'next'
import Head from 'next/head'
import Script from 'next/script'
import { ComponentProps, FormEvent, useState } from 'react'

type Todo = {
  id: number
  title: string
  completed: boolean
  createdAt: Date
}

function Button({ className, ...props }: ComponentProps<'button'>) {
  return <button {...props} className={`px-2 py-1 bg-gray-800 text-white ${className ?? ''}`} />
}


function Stats({ todos }: { todos: Todo[] }) {
  return (<div className='container mx-auto bg-slate-50 p-10 mb-4'>
    <div className='flex justify-between'>
      <div className='text-gray-800 font-bold'>Total Todos: {todos.length}</div>
      <div className='text-gray-800 font-bold'>Completed Todos: {todos.filter((todo) => todo.completed).length}</div>
    </div>
  </div>)
}

const Home: NextPage = () => {
  const [todos, setTodos] = useState<Todo[]>([]);


  const onSubmit = (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();

    const formData = new FormData(e.currentTarget);

    if (formData.get('title') === '') {
      return;
    }

    const newTodo = {
      id: todos.length + 1,
      title: formData.get('title') as string,
      completed: false,
      createdAt: new Date(),
    }

    setTodos((prevTodos) => [...prevTodos, newTodo])
    // reset form
    e.currentTarget.reset();
  }

  const toggleTodo = (id: number) => {
    setTodos((prevTodos) => prevTodos.map((todo) => {
      if (todo.id === id) {
        return {
          ...todo,
          completed: !todo.completed
        }
      }
      return todo;
    }))
  }

  const sortedTodos = todos.sort((a, b) => {
    if (a.completed === b.completed) {
      return a.createdAt.getTime() - b.createdAt.getTime();
    }
    return a.completed ? 1 : -1;
  })


  return (
    <div>
      <Head>
        <title>My Todo APP</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <Script src='https://localhost:8082/bootstrap.js'></Script>
      </Head>
      {/* Nav header */}
      <div className="flex justify-between items-center bg-gray-800 text-white p-4 mb-10">
        <h1 className="text-2xl">My Todo App</h1>
        <div className="flex space-x-2">
          <Button>Sign In</Button>
          <Button>Sign Up</Button>
        </div>
      </div>

      <div className="mx-auto container max-w-screen-md">
        <div className='container mx-auto bg-slate-200 p-10 mb-4 sticky top-0 z-10'>
          <form onSubmit={onSubmit} className="flex gap-2 mb-4">
            <input type={'text'} name="title" className='flex-1 p-2 border-neutral-300 border' />
            <Button type={'submit'} >Add Todo</Button>
          </form>

          {/* Remove all todo */}

          {todos.length > 0 && (
            <div className="flex ">
              <Button onClick={() => setTodos([])}>Remove All</Button>
            </div>
          )}
        </div>

        {/* Stats */}
        {todos.length > 0 && (
          <Stats todos={todos} />
        )}

        <div>
          <ul>
            {sortedTodos.map((todo) => (
              <li key={todo.id} className={`mb-4 ${todo.completed ? 'opacity-50 line-through' : ''}`}>
                <button className=' w-full p-4 bg-sky-300 flex gap-2' onClick={() => {
                  toggleTodo(todo.id)
                }}>
                  <span className='rounded bg-green-300 p-1'>{todo.id}</span>
                  <span className='flex-1 text-left'>
                    {todo.title}
                  </span>
                  <span>
                    {todo.createdAt?.toLocaleDateString()}
                  </span>
                </button>
              </li>
            ))}
          </ul>
        </div>

        {/* Stats */}
        {todos.length > 0 && (
          <Stats todos={todos} />
        )}
      </div>


      <footer>
        <div className="bg-gray-800 text-white p-4 text-center">
          <p>My Todo App</p>
        </div>
      </footer>
    </div>
  )
}

export default Home
